#################################################################
# PHP dev environment with Apache, MariaDB and phpMyAdmin
#
# @author: Vanessa Richie Alia-Trapero <vrat.engr@gmail.com>
#################################################################

# this is optional and for info purposes only, not a basis for this file
#version: '3.8'

# list of containers
services:
    db: # service name for our database and can be customized per your setup
      container_name: docker-mariadb # <container-name>
      image: ygalves/mariadb:11.V1 # https://hub.docker.com/_/mariadb
      restart: on-failure:5 #always # restarts the service whenever any defined configuration changes
      networks:
        - back-tier # <network-name>
      expose:
        - "3306"
      ports:
        - "3306:3306"
      volumes:
        - ./config/db:/docker-entrypoint-initdb.d/ # <source folder>:/docker-entrypoint-initdb.d/ - this will dump all the .sql or tar files in source folder
        - ./config/db/data.sql:/docker-entrypoint-initdb.d/data.sql # dump specific file
        #- ./config/db/data.sql:/docker-entrypoint-initdb.d/db.sql # dump specific file
        - dbdata:/var/lib/mysql # <volume name>:<mapped location within the container>
      environment:
        MARIADB_ROOT_PASSWORD : root # <root-password>
        MARIADB_DATABASE: wsdb # <database-name>
        MARIADB_USER : user # <database-user>
        MARIADB_PASSWORD : user # <user-password>

    phpmyadmin: # optional if you want to have GUI for your database
      container_name: docker-phpmyadmin
      image: phpmyadmin:5.2.1
      restart: on-failure:5 #always
      networks:
        - back-tier
      ports:
        - 5004:80
      depends_on:
        - db
    
    api: # optional if you want to have GUI for your database
      container_name: docker-api
      image: guillotine/webscrappingbackend
      restart: on-failure:5 #always
      networks:
        - back-tier
      ports:
        - 8070:8070
      command: python /home/webscrapping/back_end/main.py
      depends_on: 
        - db

networks: # an app usually needs multiple services to function, defining a network groups these services to create the app environment
  back-tier: {} # <network-name> - in Docker Dsektop, this will be prepended with the folder name
    # driver: bridge # bridge is the default driver, so you can omit this line

volumes: # we are going to persist the db data using volumes so that even if you stop the container, the data will persist within docker
  dbdata: # <volume-name> - in Docker Dsektop, this will be prepended with the folder name